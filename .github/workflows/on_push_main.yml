name: on-push-main

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'master'
      - 'feature-*'
      - 'hotfix-*'
      - 'bug-*'

jobs:
  unit-test:
    name: api test - run unitest on action
    runs-on: ubuntu-latest
    container: golang:1.16
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: testing
          POSTGRES_PASSWORD: testing
          POSTGRES_PORT: 5432
          POSTGRES_USER: sewakantor
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        go: [ '1.16' ]
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v2
      - name: running unitest
        env:
          DB_USER: sewakantor
          DB_HOST: postgres
          DB_PORT: 5432
          DB_PASS: testing
          DB_NAME: testing
        run: |
          go mod tidy
          go test ./... -cover -failfast

  build:
    name: Build
    needs: Unit-Test
    runs-on: ubuntu-latest
    steps:
      - name: git pull and run it
        uses: appleboy/ssh-action@master
        env:
          PORT: ${{ secrets.PORT }}
          BASE_URL_TARGET: ${{ secrets.BASE_URL_TARGET }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SECRET_TOKEN_KEY: ${{ secrets.SECRET_TOKEN_KEY }}
          JWT_TOKEN_AGE: ${{ secrets.JWT_TOKEN_AGE }}
          CONFIG_SMTP_HOST: ${{ secrets.CONFIG_SMTP_HOST }}
          CONFIG_SMTP_PORT: ${{ secrets.CONFIG_SMTP_PORT }}
          CONFIG_SENDER_NAME: ${{ secrets.CONFIG_SENDER_NAME }}
          CONFIG_AUTH_EMAIL: ${{ secrets.CONFIG_AUTH_EMAIL }}
          CONFIG_AUTH_PASSWORD: ${{ secrets.CONFIG_AUTH_PASSWORD }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script_stop: false
          script: |
            ssh development 'export PORT='"'$PORT'"' && \
            export BASE_URL_TARGET='"'$BASE_URL_TARGET'"' && \
            export DB_USER='"'$DB_USER'"' && \
            export DB_PASS='"'$DB_PASS'"' && \
            export DB_HOST='"'$DB_HOST'"' && \
            export DB_PORT='"'$DB_PORT'"' && \
            export DB_NAME='"'$DB_NAME'"' && \
            export SECRET_TOKEN_KEY='"'$SECRET_TOKEN_KEY'"' && \
            export JWT_TOKEN_AGE='"'$JWT_TOKEN_AGE'"' && \
            export CONFIG_SMTP_HOST='"'$CONFIG_SMTP_HOST'"' && \
            export CONFIG_SMTP_PORT='"'$CONFIG_SMTP_PORT'"' && \
            export CONFIG_SENDER_NAME='"'$CONFIG_SENDER_NAME'"' && \
            export CONFIG_AUTH_EMAIL='"'$CONFIG_AUTH_EMAIL'"' && \
            export CONFIG_AUTH_PASSWORD='"'$CONFIG_AUTH_PASSWORD'"' && \
            docker rm -vf $(docker ps -a -q) || true && \
            docker pull avtara/sewakantorbackend:1.0.0 && \
            docker run -d -p 8080:8080 --name sewakantorbackend \
            -e PORT=$PORT \
            -e BASE_URL_TARGET=$BASE_URL_TARGET \
            -e DB_HOST=$DB_HOST \
            -e DB_PORT=$DB_PORT \
            -e DB_USER=$DB_USER \
            -e DB_PASS=$DB_PASS \
            -e DB_NAME=$DB_NAME \
            -e SECRET_TOKEN_KEY=$SECRET_TOKEN_KEY \
            -e JWT_TOKEN_AGE=$JWT_TOKEN_AGE \
            -e CONFIG_SMTP_HOST=$CONFIG_SMTP_HOST \
            -e CONFIG_SMTP_PORT=$CONFIG_SMTP_PORTE \
            -e CONFIG_SENDER_NAME=$CONFIG_SENDER_NAME \
            -e CONFIG_AUTH_EMAIL=$CONFIG_AUTH_EMAIL \
            -e CONFIG_AUTH_PASSWORD=$CONFIG_AUTH_PASSWORD \
            avtara/sewakantorbackend:1.0.0'
#            cd ~/sk-be
#            git pull
#            rm mainrun || true
#            go build -o mainrun app/main.go