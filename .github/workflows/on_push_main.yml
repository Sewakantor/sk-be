name: on-push-main

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'master'
      - 'feature-*'
      - 'hotfix-*'
      - 'bug-*'

jobs:
  unit-test:
    name: api test - run unitest on action
    runs-on: ubuntu-latest
    container: golang:1.16
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: testing
          POSTGRES_PASSWORD: testing
          POSTGRES_PORT: 5432
          POSTGRES_USER: sewakantor
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        go: [ '1.16' ]
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v2
      - name: running unitest
        env:
          DB_USER: sewakantor
          DB_HOST: postgres
          DB_PORT: 5432
          DB_PASS: testing
          DB_NAME: testing
        run: |
          go mod tidy
          go test ./... -cover -failfast

  build-push-docker:
    name: Build docker image then push to docker hub
    runs-on: ubuntu-latest
    needs: Unit-Test
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker Image
        run: docker build -t avtara/sewakantorbackend:1.0.0 .
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push image to Docker Hub
        run: docker push avtara/sewakantorbackend:1.0.0

  deployment-ec2-aws:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build-push-docker
    steps:
      - uses: actions/checkout@v2
      - name: SSH Config
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/sewakantor-api.pem
          chmod 400 ~/.ssh/sewakantor-api.pem
          cat >>~/.ssh/config <<END
          Host development
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/sewakantor-api.pem
            StrictHostKeyChecking=no
          END
      - name: Connect to EC2 instance & run Docker image from registry
        env:
          PORT: ${{ secrets.PORT }}
          BASE_URL_TARGET: ${{ secrets.BASE_URL_TARGET }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          SECRET_TOKEN_KEY: ${{ secrets.SECRET_TOKEN_KEY }}
          JWT_TOKEN_AGE: ${{ secrets.JWT_TOKEN_AGE }}
          CONFIG_AUTH_PASSWORD: ${{ secrets.CONFIG_AUTH_PASSWORD }}
          CONFIG_AUTH_EMAIL: ${{ secrets.CONFIG_AUTH_EMAIL }}
          CONFIG_SENDER_NAME: ${{ secrets.CONFIG_SENDER_NAME }}
          CONFIG_SMTP_PORT: ${{ secrets.CONFIG_SMTP_PORT }}
          CONFIG_SMTP_HOST: ${{ secrets.CONFIG_SMTP_HOST }}
        run: |
          pkill -f "mainrun" || true
          cd ~/sk-be
          git pull
          rm mainrun || true
          build -o mainrun app/main.go
          ./mainrun &