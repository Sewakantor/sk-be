name: on-push-main

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'master'
      - 'feature-*'
      - 'hotfix-*'
      - 'bug-*'

jobs:
  unit-test:
    name: api test - run unitest on action
    runs-on: ubuntu-latest
    container: golang:1.16
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: testing
          POSTGRES_PASSWORD: testing
          POSTGRES_PORT: 5432
          POSTGRES_USER: sewakantor
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        go: [ '1.16' ]
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v2
      - name: running unitest
        env:
          DB_USER: sewakantor
          DB_HOST: postgres
          DB_PORT: 5432
          DB_PASS: testing
          DB_NAME: testing
        run: |
          go mod tidy
          go test ./... -cover -failfast

  build:
    name: Build
    needs: Unit-Test
    runs-on: ubuntu-latest
    steps:
      - name: git pull and run it
        uses: appleboy/ssh-action@master
        env:
          PORT: ${{ secrets.PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRE: ${{ secrets.JWT_EXPIRE }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script_stop: false
          script: |
            ssh development 'export PORT='"'$PORT'"' && \
            export DB_USER='"'$DB_USER'"' && \
            export DB_PASSWORD='"'$DB_PASSWORD'"' && \
            export DB_HOST='"'$DB_HOST'"' && \
            export DB_PORT='"'$DB_PORT'"' && \
            export DB_NAME='"'$DB_NAME'"' && \
            export JWT_SECRET='"'$JWT_SECRET'"' && \
            export JWT_EXPIRE='"'$JWT_EXPIRE'"' && \
            docker rm -vf $(docker ps -a -q) || true && \
            docker pull avtara/sewakantorbackend:1.0.0 && \
            docker run -d -p 8080:8080 --name sewakantorbackend \
            -e PORT=$PORT \
            -e DB_HOST=$DB_HOST \
            -e DB_PORT=$DB_PORT \
            -e DB_USER=$DB_USER \
            -e DB_PASSWORD=$DB_PASSWORD \
            -e DB_NAME=$DB_NAME \
            -e JWT_SECRET=$JWT_SECRET \
            -e JWT_EXPIRE=$JWT_EXPIRE \
            avtara/sewakantorbackend:1.0.0'
#            cd ~/sk-be
#            git pull
#            rm mainrun || true
#            go build -o mainrun app/main.go